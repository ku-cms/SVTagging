
from DeepJetCore.evaluation import makeROCs_async




#makeROCs_async(intextfile, 
#               name_list, 
#               probabilities_list, 
#               truths_list, 
#               vetos_list,
#               colors_list, 
#               outpdffile, 
#               cuts='',
#               cmsstyle=False, 
#               firstcomment='',
#               secondcomment='',
#               invalidlist='',
#               extralegend=None,
#               logY=True,
#               individual=False,
#               xaxis="",
#               nbins=200)

isMO = 'Evt_isUD + Evt_isS + Evt_isG + Evt_isMatchOther'
isO = 'isOther'

inputs = [ 
#           'trk_initial_train/output_post_test_trk_initial_03_18_2020/tree_association.txt',
#           'trk_nano4_train/output_post_test_trk_nano4_03_30_2020/tree_association.txt',
#           'trk_6var_train/output_post_test_trk_6var_04_07_2020/tree_association.txt',
#           'trk_7var_train/output_post_test_trk_7var_04_07_2020/tree_association.txt',
#           'trk_nano_train/output_post_test_trk_nano_03_18_2020/tree_association.txt',
           'trk_nano_d3ds_train/output_post_test_trk_nano_03_18_2020/tree_association.txt',
#           'trk_more_train/output_post_test_trk_more_03_25_2020/tree_association.txt'
         ]

#inputs = [ 
#           'trk_initial_train/output_post_test_trk_initial_03_18_2020/tree_association.txt',
#           'trk_nano4_train/output_post_test_trk_nano4_03_30_2020/tree_association.txt',
#         ]
#makeROCs_async(inputs,         
#               name_list=['4-var', 'Nano4'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_4var_nano4_log_trains.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=True,
#               logY=True,     
#               xaxis="b efficiency",           
#               )          
#makeROCs_async(inputs,         
#               name_list=['4-var', 'Nano4'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_4var_nano4_linear_trains.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=True,
#               logY=False,     
#               xaxis="b efficiency",           
#               )          
#inputs = [ 
#           'trk_nano4_train/output_post_test_trk_nano4_03_30_2020/tree_association.txt',
#           'trk_6var_train/output_post_test_trk_6var_04_07_2020/tree_association.txt',
#         ]
#makeROCs_async(inputs,         
#               name_list=['Nano4', 'Nano6'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_nano4_nano6_log_trains.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=True,
#               logY=True,     
#               xaxis="b efficiency",           
#               )          
#makeROCs_async(inputs,         
#               name_list=['Nano4', 'Nano6'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_nano4_nano6_linear_trains.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=True,
#               logY=False,     
#               xaxis="b efficiency",           
#               )          
#inputs = [ 
#           'trk_6var_train/output_post_test_trk_6var_04_07_2020/tree_association.txt',
#           'trk_7var_train/output_post_test_trk_7var_04_07_2020/tree_association.txt',
#         ]
#makeROCs_async(inputs,         
#               name_list=['Nano6', 'Nano7'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_nano6_nano7_log_trains.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=True,
#               logY=True,     
#               xaxis="b efficiency",           
#               )          
#makeROCs_async(inputs,         
#               name_list=['Nano6', 'Nano7'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_nano6_nano7_linear_trains.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=True,
#               logY=False,     
#               xaxis="b efficiency",           
#               )          
#inputs = [ 
#           'trk_7var_train/output_post_test_trk_7var_04_07_2020/tree_association.txt',
#           'trk_nano_train/output_post_test_trk_nano_03_18_2020/tree_association.txt',
#         ]
#makeROCs_async(inputs,         
#               name_list=['Nano7', 'Nano8'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_nano7_nano8_log_trains.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=True,
#               logY=True,     
#               xaxis="b efficiency",           
#               )          
#makeROCs_async(inputs,         
#               name_list=['Nano7', 'Nano8'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_nano7_nano8_linear_trains.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=True,
#               logY=False,     
#               xaxis="b efficiency",           
#               )          
inputs = [ 
#           'trk_nano4_train/output_post_test_trk_nano4_03_30_2020/tree_association.txt',
           #'trk_nano_plus_pt20/output_post_test_trk_nano_old_08_11_2020/tree_association.txt',
           'trk_nano_plus_pt20/output_post_test_trk_nano_08_11_2020/tree_association.txt',
#           'trk_more_train/output_post_test_trk_more_03_25_2020/tree_association.txt'
         ]
isMO = 'Evt_isUD + Evt_isS + Evt_isG + Evt_isMatchOther'
isC = 'Evt_isC'
makeROCs_async(inputs,         
               name_list=['Nano8plus-JetIso20'],         
               probabilities_list=['prob_isB', 'prob_isB'], 
               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
               vetos_list=[isMO, isC],         
               colors_list='auto',        
               outpdffile='ROC_nano8plus_jetiso_log_trains.pdf',         
               cuts=['!Evt_isMatchedToJet','!Evt_isMatchedToJet'],           
               cmsstyle=True,
               logY=True,     
               xaxis="B efficiency",           
               )          
#makeROCs_async(inputs,         
#               name_list=['Nano8', 'Nano8plus_pt20'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_nano8_nano8pluspt20_log_trains.pdf',         
#               cuts=['!Evt_isMatchedToJet','!Evt_isMatchedToJet'],           
#               cmsstyle=True,
#               logY=True,     
#               xaxis="b efficiency",           
#               )          
#makeROCs_async(inputs,         
#               name_list=['Nano8', 'Nano8plus_pt20'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_nano8_nano8pluspt20_linear_trains.pdf',         
#               cuts=['!Evt_isMatchedToJet','!Evt_isMatchedToJet'],
#               cmsstyle=True,
#               logY=False,     
#               xaxis="b efficiency",           
#               )          
#makeROCs_async(inputs,         
#               name_list=['4-var', 'Nano4', 'Nano6', 'Nano7', 'Nano8', '9-var'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB', '2.prob_isB', '3.prob_isB', '4.prob_isB', '5.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO, isMO, isMO, isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_6_log_trains.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=True,
#               logY=True,     
#               xaxis="b efficiency",           
#               )          
#makeROCs_async(inputs,         
#               name_list=['4-var', 'Nano4', 'Nano6', 'Nano7', 'Nano8', '9-var'],         
#               probabilities_list=['0.prob_isB', '1.prob_isB', '2.prob_isB', '3.prob_isB', '4.prob_isB', '5.prob_isB'], 
#               truths_list=['Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB', 'Evt_isB+Evt_isGB'],        
#               vetos_list=[isMO, isMO, isMO, isMO, isMO, isMO],         
#               colors_list='auto',        
#               outpdffile='ROC_6_linear_trains.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=True,
#               logY=False,     
#               xaxis="b efficiency",           
#               )          
#makeROCs_async('output_post_test/tree_association.txt',         
#               name_list=['B vs light/other', 'B vs light', 'C vs light/other', 'C vs light'],         
#               probabilities_list=['prob_isB', 'prob_isB', 'prob_isC', 'prob_isC'], 
#               truths_list=['Evt_isB', 'Evt_isB', 'Evt_isC', 'Evt_isC'],        
#               vetos_list=[isLightO, isLight, isLightO, isLight],         
#               colors_list='auto',        
#               outpdffile='ROC_full.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=False,     
#               firstcomment='',    
#               secondcomment='',   
#               invalidlist='',     
#               extralegend=None,   
#               logY=True,          
#               individual=False,   
#               xaxis="b efficiency",           
#               nbins=200)          
#makeROCs_async('output_post_test_fraction_all/tree_association.txt',         
#               name_list=['B vs light/other', 'B vs light', 'C vs light/other', 'C vs light'],         
#               probabilities_list=['prob_isB', 'prob_isB', 'prob_isC', 'prob_isC'], 
#               truths_list=['Evt_isB', 'Evt_isB', 'Evt_isC', 'Evt_isC'],        
#               vetos_list=[isLightO, isLight, isLightO, isLight],         
#               colors_list='auto',        
#               outpdffile='ROC_fraction_all.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=False,     
#               firstcomment='',    
#               secondcomment='',   
#               invalidlist='',     
#               extralegend=None,   
#               logY=True,          
#               individual=False,   
#               xaxis="b efficiency",           
#               nbins=200)          
#makeROCs_async('output_post_test_fraction/tree_association.txt',         
#               name_list=['B vs light/other', 'C vs. light/other', 'B vs light', 'C vs light'],         
#               probabilities_list=['prob_isB','prob_isC', 'prob_isB', 'prob_isC'], 
#               truths_list=['Evt_isB+Evt_isGB','Evt_isC', 'Evt_isB+Evt_isGB', 'Evt_isC'],        
#               vetos_list=[isLightO, isLightO, isLight, isLight],         
#               colors_list='auto',        
#               outpdffile='ROC_pt10.pdf',         
#               cuts='!Evt_isMatchedToJet',            
#               cmsstyle=False,     
#               firstcomment='',    
#               secondcomment='',   
#               invalidlist='',     
#               extralegend=None,   
#               logY=True,          
#               individual=False,   
#               xaxis="b efficiency",           
#               nbins=200)          
#makeROCs_async('output_post_test_fraction/tree_association.txt',         
#               name_list=['B vs light/other', 'C vs. light/other', 'B vs light', 'C vs light'],         
#               probabilities_list=['prob_isB','prob_isC', 'prob_isB', 'prob_isC'], 
#               truths_list=['Evt_isB','Evt_isC', 'Evt_isB', 'Evt_isB'],        
#               vetos_list=[isLightO, isLightO, isLight, isLight],         
#               colors_list='auto',        
#               outpdffile='ROC_pt5.pdf',         
#               cuts='!Evt_isMatchedToJet && Evt_pt < 5',            
#               cmsstyle=False,     
#               firstcomment='',    
#               secondcomment='',   
#               invalidlist='',     
#               extralegend=None,   
#               logY=True,          
#               individual=False,   
#               xaxis="b efficiency",           
#               nbins=200)          
